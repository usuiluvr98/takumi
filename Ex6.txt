import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.pylab import rcParams
import warnings
warnings.filterwarnings('ignore')
rcParams['figure.figsize']=10,6

df= pd.read_csv('AirPassengers.csv', encoding='gbk',parse_dates=['Month'],infer_datetime_format=True)
indf=df.set_index(['Month'])

indf.describe()
indf.rename(columns={'#Passengers':'Passengers'},inplace=True)
indf.head()

plt.xlabel('Date')
plt.ylabel('Number of Passengers')
plt.plot(indf)

indf['months'] = [x.month for x in indf.index]
indf['years'] = [x.year for x in indf.index]
indf.head()

indf.reset_index(drop=True, inplace=True)
indf.head()

X=indf.drop("Passengers",axis=1)
Y= indf["Passengers"]
X_train=X[:int (len(Y)*0.75)] 
X_test=X[int(len(Y)*0.75):]
Y_train=Y[:int (len(Y)*0.75)] 
Y_test=Y[int(len(Y)*0.75):]

from sklearn.ensemble import RandomForestRegressor
rf = RandomForestRegressor()
rf.fit(X_train, Y_train)

df1=df.set_index(['Month'])
df1.rename(columns={'#Passengers':'Passengers'},inplace=True)
train=df1.Passengers[:int (len(indf.Passengers)*0.75)]
test=df1.Passengers[int(len(indf.Passengers)*0.75):]
preds=rf.predict(X_test)
predictions=pd.DataFrame(preds,columns=['Passengers'])
predictions.index=test.index
plt.plot(train)
plt.plot(test, color='orange', label='actual')
plt.plot(predictions,color='green', label='Forecasts')
plt.xlabel('Date')
plt.ylabel('Number of Passengers')
plt.title("Forecast of AirPassengers")

print("training score: ", rf.score(X_train, Y_train))
print("testing score: ", rf.score(X_test, Y_test))